
import CssBaseline from '@mui/material/CssBaseline';
import Paper from '@mui/material/Paper';
import List from '@mui/material/List';
import ListItem from '@mui/material/ListItem';
import ListItemAvatar from '@mui/material/ListItemAvatar';
import ListItemText from '@mui/material/ListItemText';
import ListSubheader from '@mui/material/ListSubheader';
import Avatar from '@mui/material/Avatar';
import AdminPanelSettingsOutlinedIcon from '@mui/icons-material/AdminPanelSettingsOutlined';
import ManageAccountsOutlinedIcon from '@mui/icons-material/ManageAccountsOutlined';
import Snackbar from '@mui/material/Snackbar';
import Alert from '@mui/material/Alert';
import SearchButton from '../../Client/Components/SearchButton/SearchButton';
import DeleteOutlineOutlinedIcon from '@mui/icons-material/DeleteOutlineOutlined';
import { useQuery } from '@tanstack/react-query';
import { useState } from 'react';

//     {
//         id: 1,
//         primary: 'Brunch this week?',
//         secondary: "I'll be in the neighbourhood this week. Let's grab a bite to eat",
//         person: '/static/images/avatar/5.jpg',
//     },
//     {
//         id: 2,
//         primary: 'Birthday Gift',
//         secondary: `Do you have a suggestion for a good present for John on his work
//       anniversary. I am really confused & would love your thoughts on it.`,
//         person: '/static/images/avatar/1.jpg',
//     },
//     {
//         id: 3,
//         primary: 'Recipe to try',
//         secondary: 'I am try out this new BBQ recipe, I think this might be amazing',
//         person: '/static/images/avatar/2.jpg',
//     },
//     {
//         id: 4,
//         primary: 'Yes!',
//         secondary: 'I have the tickets to the ReactConf for this year.',
//         person: '/static/images/avatar/3.jpg',
//     },
//     {
//         id: 5,
//         primary: "Doctor's Appointment",
//         secondary: 'My appointment for the doctor was rescheduled for next Saturday.',
//         person: '/static/images/avatar/4.jpg',
//     },
//     {
//         id: 6,
//         primary: 'Discussion',
//         secondary: `Menus that are generated by the bottom app bar (such as a bottom
//       navigation drawer or overflow menu) open as bottom sheets at a higher elevation
//       than the bar.`,
//         person: '/static/images/avatar/5.jpg',
//     },
//     {
//         id: 7,
//         primary: 'Summer BBQ',
//         secondary: `Who wants to have a cookout this weekend? I just got some furniture
//       for my backyard and would love to fire up the grill.`,
//         person: '/static/images/avatar/1.jpg',
//     },
// ];


export default function UsersListSohozDjr() {
    const [snackbarOpen, setSnackbarOpen] = useState(false);
    const [snackbarMessage, setSnackbarMessage] = useState('');
    const [snackbarSeverity, setSnackbarSeverity] = useState('success'); // Set the default severity


    const { data, refetch } = useQuery(["users"], async () => {
        const res = await fetch("http://localhost:5000/users")
        return res.json()

    })
    console.log(data)
    const handleMakeAdmin = (_id, name) => {
        console.log(_id)
        fetch(`http://localhost:5000/users/admin/${_id}`, {
            method: "PATCH"
        })

            .then(res => res.json())
            .then(Userdata => {
                refetch()
                console.log(Userdata)
                if (Userdata.modifiedCount) {
                    setSnackbarMessage(`${name} is now an admin`);
                    setSnackbarSeverity('success');
                    setSnackbarOpen(true);
                }
            })
    }
    const handleMakeManager = (_id, name) => {
        console.log(_id)
        fetch(`http://localhost:5000/users/manager/${_id}`, {
            method: "PATCH"
        })

            .then(res => res.json())
            .then(Userdata => {
                refetch()
                console.log(Userdata)
                if (Userdata.modifiedCount) {
                    setSnackbarMessage(`${name} is now a manager`);
                    setSnackbarSeverity('success');
                    setSnackbarOpen(true);
                }
            })
    }
    const handleCloseSnackbar = () => {
        setSnackbarOpen(false);
    };

    return (
        <>
            <CssBaseline />
            <Paper square >

                <List sx={{ mb: 2, paddingTop: "0", backgroundColor: "#F3F6FC" }}>
                    {data?.map(({ email, name, url, _id, role, phone }) => (
                        <div key={_id}>
                            <ListSubheader sx={{ width: "full", padding: "0", paddingTop: "0" }}>

                                <SearchButton></SearchButton>

                            </ListSubheader>


                            <ListItem className='bg-white shadow-md border my-2 '>
                                <ListItemAvatar>
                                    <Avatar alt="Profile Picture" src={url} />
                                </ListItemAvatar>
                                <ListItemText primary={
                                    <span className='flex space-x-4'>
                                        <span>{name}</span>
                                        <span className='text-gray-400'>{role}</span>
                                    </span>
                                } secondary={

                                    <span className='space-y-0'>
                                        <span className='pt-1 flex flex-col'>{email}</span>
                                        <span>0445454545454</span>
                                    </span>
                                } />
                                <div className='ml-[150px] space-y-2'>
                                    <button onClick={() => handleMakeAdmin(_id, name)}><AdminPanelSettingsOutlinedIcon sx={{ color: "#4D88A8" }}></AdminPanelSettingsOutlinedIcon></button>
                                    <button onClick={() => handleMakeManager(_id, name)}><ManageAccountsOutlinedIcon sx={{ color: "#4D88A8" }} ></ManageAccountsOutlinedIcon></button>
                                    <button onClick={() => handleMakeManager(_id, name)}><DeleteOutlineOutlinedIcon sx={{ color: "#F88379" }} ></DeleteOutlineOutlinedIcon></button>
                                </div>
                            </ListItem>
                        </div>
                    ))}
                </List>
            </Paper>
            {/* Snackbar component */}
            <Snackbar
                open={snackbarOpen}
                autoHideDuration={3000} // Adjust the duration as needed
                onClose={handleCloseSnackbar}
            >
                <Alert severity={snackbarSeverity} onClose={handleCloseSnackbar}>
                    {snackbarMessage}
                </Alert>
            </Snackbar>
        </>
    );
}